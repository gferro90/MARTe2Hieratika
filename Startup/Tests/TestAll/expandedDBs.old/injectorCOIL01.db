#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/home/ifmifmgr/topIFMIF/dbd/injector.dbd")
#! DBDEND


record(ai, SRC:COIL01_PS:Status) {
  field(DESC, "lect status")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn(modbus_C1:lect_status 0)MODBUS_DATA")
}

record(ao, SRC:COIL01_PS:ISet) {
  field(DESC, "ecriture Cde analog")
  field(DTYP, "asynFloat64")
  field(DRVH, "125")
  field(DRVL, "0")
  field(HOPR, "125")
  field(LOPR, "0")
  field(PREC, "1")
  field(FLNK, "SRC:COIL01_PS:IntCmd")
  field(OUT, "@asyn(modbus_C1:ecr_Icons 0 0)MODBUS_DATA")

}

record(ao, SRC:COIL01_PS:Rampe) {
  field(DESC, "ecriture Cde analog")
  field(DTYP, "asynFloat64")
  field(OMSL, "supervisory")
  field(DRVH, "50")
  field(DRVL, "0")
  field(HOPR, "50")
  field(LOPR, "0")
  field(FLNK, "SRC:COIL01_PS:IntCmd")
  field(OUT, "@asyn(modbus_C1:ecr_rampe 0 0)MODBUS_DATA")
}


record(bo, SRC:COIL01_PS:IntCmd) {
#  field(OMSL, "closed_loop")
#  field(DOL, "1")
  field(VAL, "1")
  field(OUT, "SRC:COIL01_PS:RampeCmd PP")
}


record(bo, SRC:COIL01_PS:RampeCmd) {
  field(DESC, "Cde start rampe COIL01")
  field(DTYP, "asynUInt32Digital")
  field(ONAM, "ON")
  field(ZNAM, "OFF")
  field(HIGH, "1")
  field(OUT, "@asynMask(modbus_C1:ecr_Bit3 0 1 0)MODBUS_DATA")
}


record(bo, SRC:COIL01_PS:ON) {
  field(DESC, "Command ON COIL01")
  field(DTYP, "asynUInt32Digital")
  field(OMSL, "supervisory")
  field(HIGH, "2")
  field(OUT, "@asynMask(modbus_C1:ecr_Bit0 0 1 0)MODBUS_DATA")
}

record(bo, SRC:COIL01_PS:OFF) {
  field(DESC, "Command OFF COIL01")
  field(DTYP, "asynUInt32Digital")
  field(OMSL, "supervisory")
  field(HIGH, "2")
  field(OUT, "@asynMask(modbus_C1:ecr_Bit1 0 1 0)MODBUS_DATA")
}

record(bo, SRC:COIL01_PS:RESET) {
  field(DESC, "Command reset COIL01")
  field(DTYP, "asynUInt32Digital")
  field(OMSL, "supervisory")
  field(HIGH, "2")
  field(OUT, "@asynMask(modbus_C1:ecr_Bit2 0 1 0)MODBUS_DATA")
}

record(bo, SRC:COIL01_PS:PretRampe) {
  field(DESC, "Cde demande rampe C1")
  field(DTYP, "Soft Channel")
}

record(ai, SRC:COIL01_PS:IRdbk) {
  field(DESC, "Lecture I COIL01_PS")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn(modbus_C1:lect_bloc1 0)MODBUS_DATA")
  field(PREC,"1")
}


###################################################################
#
# --   OLD RECORDS (Gsub/aSub based)



#record(ao, SRC:COIL01_PS:ISet) {
#  field(DESC, "ecriture Cde analog")
#  field(DTYP, "Soft Channel")
#  field(OMSL, "supervisory")
#  field(DRVH, "125")
#  field(DRVL, "0")
#  field(HOPR, "125")
#  field(LOPR, "0")
#  field(FLNK, "SRC:COIL01_PS:GsubIcons")
#  field(PREC, "1")
#}

#record(aSub, SRC:COIL01_PS:GsubRamp) {
#  field(FLNK, "SRC:COIL01_PS:WrtRamp")
#  field(EFLG, "ON CHANGE")
#  field(SNAM, "writeNMots")
#  field(INPA, "SRC:COIL01_PS:Rampe")
#  field(FTA, "DOUBLE")
#  field(OUTA, "SRC:COIL01_PS:WrtRamp")
#  field(FTVA, "USHORT")
#  field(SCAN, "Passive")
#  field(NOVA, "2")
#}


#record(waveform, SRC:COIL01_PS:WrtRamp) {
#  field(DTYP, "asynInt32ArrayOut")
#  field(NELM, "2")
#  field(FTVL, "ULONG")
#  field(INP, "@asyn(modbus_C1:ecr_rampe 0 0)MODBUS_DATA")
#}

#record(ao, SRC:COIL01_PS:WrtRamp) {
#  field(DESC, "ecriture Cde analog")
#  field(DTYP, "asynFloat64")
#  field(OUT, "@asyn(modbus_C1:ecr_rampe 0 0)MODBUS_DATA")
#}

#record(aSub, SRC:COIL01_PS:GsubIcons) {
#  field(FLNK, "SRC:COIL01_PS:WrtIcons")
#  field(EFLG, "ON CHANGE")
#  field(SNAM, "writeNMots")
#  field(INPA, "SRC:COIL01_PS:ISet")
#  field(FTA, "DOUBLE")
#  field(OUTA, "SRC:COIL01_PS:WrtIcons")
#  field(FTVA, "USHORT")
#  field(OUTB, "SRC:COIL01_PS:PretRampe")
#  field(FTVB, "USHORT")
#  field(SCAN, "Passive")
#  field(NOVA, "2")
#}

#record(waveform, SRC:COIL01_PS:WrtIcons) {
#  field(DTYP, "asynInt32ArrayOut")
#  field(NELM, "2")
#  field(FTVL, "ULONG")
#  field(FLNK, "SRC:COIL01_PS:PretRampe")
#  field(INP, "@asyn(modbus_C1:ecr_Icons 0 0)MODBUS_DATA")
#}

#record(waveform, SRC:COIL01_PS:Readbloc1) {
#  field(DESC, "Lecture AI")
#  field(SCAN, "I/O Intr")
#  field(DTYP, "asynInt32ArrayIn")
#  field(INP, "@asyn(modbus_C1:lect_bloc1 0)MODBUS_DATA")
#  field(NELM, "2")
#  field(FTVL, "LONG")
#  field(FLNK, "SRC:COIL01_PS:GsubRead")
#}

#record(aSub, SRC:COIL01_PS:GsubRead) {
#  field(EFLG, "ON CHANGE")
#  field(SNAM, "readNMots")
#  field(INPA, "SRC:COIL01_PS:Readbloc1")
#  field(FTA, "LONG")
#  field(OUTA, "SRC:COIL01_PS:IRdbk")
#  field(FTVA, "FLOAT")
#  field(NOA, "2")
#  field(SCAN, "Passive")
#  field(FLNK, "SRC:COIL01_PS:IRdbk")
#}

#record(ai, SRC:COIL01_PS:IRdbk) {
#  field(DESC, "Lecture Icons")
#  field(DTYP, "Soft Channel")
#}


