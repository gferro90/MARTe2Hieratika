
$Application = {
Class ="RealTimeApplication"
+Functions = {
Class ="ReferenceContainer"
+SyncGAM0 = {
Class ="IOGAM"
InputSignals = {
Time = {
Type ="uint32"
DataSource ="LinuxTimer0"
Frequency =1.000000
}
}
OutputSignals = {
TimeOnDDB0 = {
Type ="uint32"
DataSource ="DDB1"
}
}
}
+PrioGAM0 = {
Class ="PriorityGAM"
CycleStep =+10
ChangeStep =+10
InputSignals = {
MARTe2::EPICSCAInput::Test::UInt16 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Int32 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::UInt32 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Record1 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Record2 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Record3 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Record4 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Float32 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Float64 = {
Type = float64
DataSource = EpicsDiodeInput0
}

MARTe2::EPICSCAInput::Test::Int16Arr = {
Type = int16
DataSource = EpicsDiodeInput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::UInt16Arr = {
Type = int16
DataSource = EpicsDiodeInput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::Int32Arr = {
Type = int32
DataSource = EpicsDiodeInput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::UInt32Arr = {
Type = int32
DataSource = EpicsDiodeInput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::Float32Arr = {
Type = float32
DataSource = EpicsDiodeInput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::Float64Arr = {
Type = float64
DataSource = EpicsDiodeInput0
NumberOfDimensions = 1
NumberOfElements = 10
}

}
OutputSignals = {
MARTe2::EPICSCAInput::Test::UInt16_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Int32_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::UInt32_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Record1_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Record2_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Record3_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Record4_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Float32_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Float64_Http = {
Type = float64
DataSource = HttpDiodeOutput0
}

MARTe2::EPICSCAInput::Test::Int16Arr_Http = {
Type = int16
DataSource = HttpDiodeOutput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::UInt16Arr_Http = {
Type = int16
DataSource = HttpDiodeOutput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::Int32Arr_Http = {
Type = int32
DataSource = HttpDiodeOutput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::UInt32Arr_Http = {
Type = int32
DataSource = HttpDiodeOutput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::Float32Arr_Http = {
Type = float32
DataSource = HttpDiodeOutput0
NumberOfDimensions = 1
NumberOfElements = 10
}

MARTe2::EPICSCAInput::Test::Float64Arr_Http = {
Type = float64
DataSource = HttpDiodeOutput0
NumberOfDimensions = 1
NumberOfElements = 10
}

ToBeSent0 = {
NumberOfDimensions = 1
NumberOfElements = 4
Type = uint32
DataSource = HttpDiodeOutput0
}

}
}
}
+Data = {
Class ="ReferenceContainer"
+DDB1 = {
Class ="GAMDataSource"
}
+Timings = {
Class ="TimingDataSource"
}
+EpicsDiodeInput0 = {
Class ="EPICSCA::EPICSCAInput"
Signals = {
MARTe2::EPICSCAInput::Test::UInt16 = {
PVName = MARTe2::EPICSCAInput::Test::UInt16
}

MARTe2::EPICSCAInput::Test::Int32 = {
PVName = MARTe2::EPICSCAInput::Test::Int32
}

MARTe2::EPICSCAInput::Test::UInt32 = {
PVName = MARTe2::EPICSCAInput::Test::UInt32
}

MARTe2::EPICSCAInput::Test::Record1 = {
PVName = MARTe2::EPICSCAInput::Test::Record1
}

MARTe2::EPICSCAInput::Test::Record2 = {
PVName = MARTe2::EPICSCAInput::Test::Record2
}

MARTe2::EPICSCAInput::Test::Record3 = {
PVName = MARTe2::EPICSCAInput::Test::Record3
}

MARTe2::EPICSCAInput::Test::Record4 = {
PVName = MARTe2::EPICSCAInput::Test::Record4
}

MARTe2::EPICSCAInput::Test::Float32 = {
PVName = MARTe2::EPICSCAInput::Test::Float32
}

MARTe2::EPICSCAInput::Test::Float64 = {
PVName = MARTe2::EPICSCAInput::Test::Float64
}

MARTe2::EPICSCAInput::Test::Int16Arr = {
PVName = MARTe2::EPICSCAInput::Test::Int16Arr
}

MARTe2::EPICSCAInput::Test::UInt16Arr = {
PVName = MARTe2::EPICSCAInput::Test::UInt16Arr
}

MARTe2::EPICSCAInput::Test::Int32Arr = {
PVName = MARTe2::EPICSCAInput::Test::Int32Arr
}

MARTe2::EPICSCAInput::Test::UInt32Arr = {
PVName = MARTe2::EPICSCAInput::Test::UInt32Arr
}

MARTe2::EPICSCAInput::Test::Float32Arr = {
PVName = MARTe2::EPICSCAInput::Test::Float32Arr
}

MARTe2::EPICSCAInput::Test::Float64Arr = {
PVName = MARTe2::EPICSCAInput::Test::Float64Arr
}

}
}
+HttpDiodeOutput0 = {
Class ="HttpDiodeDataSource"
ServerIpAddress ="127.0.0.1"
ServerPort =+4444
Signals = {
MARTe2::EPICSCAInput::Test::UInt16_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Int32_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::UInt32_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Record1_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Record2_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Record3_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Record4_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Float32_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Float64_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Int16Arr_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::UInt16Arr_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Int32Arr_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::UInt32Arr_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Float32Arr_Http = {
Samples = 1
}

MARTe2::EPICSCAInput::Test::Float64Arr_Http = {
Samples = 1
}

ToBeSent0 = {
NumberOfDimensions = 1
NumberOfElements = 4
Type = uint32
}

}
}
+LinuxTimer0 = {
Class ="LinuxTimer"
SleepNature ="Default"
ExecutionMode ="RealTimeThread"
Signals = {
Counter = {
Type ="uint32"
}
Time = {
Type ="uint32"
}
}
}
}
+States = {
Class ="ReferenceContainer"
+State1 = {
Class ="RealTimeState"
+Threads = {
Class ="ReferenceContainer"
+Thread0 = {
Class ="RealTimeThread"
CPUs =+1
Functions ={ "SyncGAM0" "PrioGAM0" } 
}
}
}
}
+Scheduler = {
Class ="GAMScheduler"
TimingDataSource ="Timings"
}
}